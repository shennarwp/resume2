name: Trigger auto deployment for resume

on:
  push:
    branches: [main, test-push-registry]

  # Allow manual trigger
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build image and push to registries
    runs-on: ubuntu-latest
    permissions:
      packages: write # to publish to ghcr

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v4

      - name: "Login to ghcr"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image
        run: |
          docker build . --tag ghcr.io/${{ secrets.GHCR_USERNAME }}/resume:${{ github.sha }} \
                         --tag ${{ secrets.DOCKERHUB_USERNAME }}/resume:${{ github.sha }}

      - name: Push image
        run: |
          docker push ghcr.io/shennarwp/resume:${{ github.sha }}
          docker push shennarwp/resume:${{ github.sha }}

  deploy-azure:
    name: Deploy to azure container apps
    runs-on: ubuntu-latest
    needs: [build-and-push]

    steps:
      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to azure
        uses: azure/container-apps-deploy-action@v2
        with:
          containerAppName: resume
          containerAppEnvironment: appPlan-xqp6nrnmjtxv6
          resourceGroup: myip
          imageToDeploy: ghcr.io/shennarwp/resume:${{ github.sha }}

  deploy-hetzner:
    name: Deploy to hetzner vm
    environment:
      name: hetzner
    runs-on: ubuntu-latest
    needs: [build-and-push]

    steps:
      - name: Deploy to hetzner
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            docker container stop resume \
            && docker container rm resume \
            && docker run \
                 --detach
                 --net nginx \
                 --name resume \
                 --restart always \
                 --expose 80 \
                 shennarwp/resume:${{ github.sha }} \
            && docker container restart nginx \
            && docker image prune --force
